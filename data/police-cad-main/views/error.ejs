<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Error - Lines Police CAD</title>
  
  <!-- Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
  
  <!-- HeroUI Pro CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@heroui/pro@1.0.0/dist/css/heroui-pro.min.css">
  
  <!-- Favicon -->
  <link rel="shortcut icon" type="image/ico" href="/static/images/favicon.ico">
  
  <style>
    :root {
      --primary-color: #667eea;
      --primary-dark: #5a67d8;
      --secondary-color: #764ba2;
      --accent-color: #f093fb;
      --success-color: #48bb78;
      --warning-color: #ed8936;
      --danger-color: #f56565;
      --dark-bg: #1a202c;
      --darker-bg: #171923;
      --card-bg: #2d3748;
      --text-primary: #f7fafc;
      --text-secondary: #a0aec0;
      --border-color: #4a5568;
    }
    
    body {
      font-family: 'Inter', sans-serif;
      background: linear-gradient(135deg, var(--dark-bg) 0%, var(--darker-bg) 100%);
      color: var(--text-primary);
      margin: 0;
      padding: 0;
      min-height: 100vh;
      overflow-x: hidden;
    }
    
    .error-container {
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 2rem;
      position: relative;
    }
    
    .error-container::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: 
        radial-gradient(circle at 20% 80%, rgba(102, 126, 234, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(118, 75, 162, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 40% 40%, rgba(240, 147, 251, 0.05) 0%, transparent 50%);
      pointer-events: none;
    }
    
    .error-card {
      background: rgba(45, 55, 72, 0.8);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(74, 85, 104, 0.3);
      border-radius: 20px;
      padding: 3rem;
      max-width: 500px;
      width: 100%;
      text-align: center;
      box-shadow: 
        0 25px 50px -12px rgba(0, 0, 0, 0.25),
        0 0 0 1px rgba(255, 255, 255, 0.05);
      position: relative;
      z-index: 1;
      animation: slideUp 0.6s ease-out;
    }
    
    @keyframes slideUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    .error-icon {
      width: 80px;
      height: 80px;
      background: linear-gradient(135deg, #f56565 0%, #e53e3e 100%);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto 2rem;
      box-shadow: 0 10px 30px rgba(245, 101, 101, 0.3);
      animation: pulse 2s infinite;
    }
    
    @keyframes pulse {
      0%, 100% {
        transform: scale(1);
        box-shadow: 0 10px 30px rgba(245, 101, 101, 0.3);
      }
      50% {
        transform: scale(1.05);
        box-shadow: 0 15px 40px rgba(245, 101, 101, 0.4);
      }
    }
    
    .error-icon i {
      font-size: 2rem;
      color: white;
    }
    
    .error-title {
      font-size: 2rem;
      font-weight: 700;
      margin-bottom: 1rem;
      background: linear-gradient(135deg, #f56565 0%, #e53e3e 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }
    
    .error-message {
      font-size: 1.1rem;
      color: var(--text-secondary);
      margin-bottom: 2.5rem;
      line-height: 1.6;
    }
    
    .error-actions {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      align-items: center;
    }
    
    .btn-primary {
      background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
      color: white;
      border: none;
      padding: 1rem 2rem;
      border-radius: 12px;
      font-weight: 600;
      font-size: 1rem;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
    }
    
    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
    }
    
    .btn-secondary {
      background: rgba(74, 85, 104, 0.3);
      color: var(--text-secondary);
      border: 1px solid rgba(74, 85, 104, 0.5);
      padding: 0.75rem 1.5rem;
      border-radius: 10px;
      font-weight: 500;
      font-size: 0.9rem;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
    }
    
    .btn-secondary:hover {
      background: rgba(74, 85, 104, 0.5);
      border-color: rgba(74, 85, 104, 0.7);
      color: var(--text-primary);
    }
    
    .error-code {
      background: rgba(74, 85, 104, 0.2);
      border: 1px solid rgba(74, 85, 104, 0.3);
      border-radius: 8px;
      padding: 0.75rem 1rem;
      font-family: 'Monaco', 'Menlo', monospace;
      font-size: 0.85rem;
      color: var(--text-secondary);
      margin-top: 1rem;
      word-break: break-all;
    }
    
    .logo {
      position: absolute;
      top: 2rem;
      left: 2rem;
      display: flex;
      align-items: center;
      gap: 0.75rem;
      color: var(--text-primary);
      text-decoration: none;
      font-weight: 600;
      font-size: 1.1rem;
    }
    
    .logo img {
      width: 32px;
      height: 32px;
    }
    
    @media (max-width: 768px) {
      .error-card {
        padding: 2rem;
        margin: 1rem;
      }
      
      .error-title {
        font-size: 1.5rem;
      }
      
      .error-message {
        font-size: 1rem;
      }
      
      .logo {
        position: relative;
        top: auto;
        left: auto;
        margin-bottom: 2rem;
        justify-content: center;
      }
    }
  </style>
</head>
<body>
  <a href="/" class="logo">
    <img src="/static/images/favicon-32x32.png" alt="LPC Logo">
    Lines Police CAD
  </a>
  
  <div class="error-container">
    <div class="error-card">
      <div class="error-icon">
        <i class="fa fa-exclamation-triangle"></i>
      </div>
      
      <h1 class="error-title">Oops! Something went wrong</h1>
      
      <p class="error-message">
        <%= message %>
      </p>
      
      <div class="error-actions">
        <a href="/" class="btn-primary">
          <i class="fa fa-home"></i>
          Return to Home
        </a>
        
        <% if (typeof redirect !== 'undefined' && redirect) { %>
          <a href="<%= redirect %>" class="btn-secondary">
            <i class="fa fa-arrow-left"></i>
            Go Back
          </a>
          
          <div class="error-code">
            Redirect: <%= redirect %>
          </div>
        <% } %>
      </div>
    </div>
  </div>
  
  <script>
    // Add some interactive effects
    document.addEventListener('DOMContentLoaded', function() {
      const card = document.querySelector('.error-card');
      
      // Add hover effect
      card.addEventListener('mouseenter', function() {
        this.style.transform = 'translateY(-5px)';
        this.style.boxShadow = '0 30px 60px -12px rgba(0, 0, 0, 0.3), 0 0 0 1px rgba(255, 255, 255, 0.1)';
      });
      
      card.addEventListener('mouseleave', function() {
        this.style.transform = 'translateY(0)';
        this.style.boxShadow = '0 25px 50px -12px rgba(0, 0, 0, 0.25), 0 0 0 1px rgba(255, 255, 255, 0.05)';
      });
      
      // Add click ripple effect to buttons
      const buttons = document.querySelectorAll('.btn-primary, .btn-secondary');
      buttons.forEach(button => {
        button.addEventListener('click', function(e) {
          const ripple = document.createElement('span');
          const rect = this.getBoundingClientRect();
          const size = Math.max(rect.width, rect.height);
          const x = e.clientX - rect.left - size / 2;
          const y = e.clientY - rect.top - size / 2;
          
          ripple.style.width = ripple.style.height = size + 'px';
          ripple.style.left = x + 'px';
          ripple.style.top = y + 'px';
          ripple.classList.add('ripple');
          
          this.appendChild(ripple);
          
          setTimeout(() => {
            ripple.remove();
          }, 600);
        });
      });
    });
  </script>
  
  <style>
    .ripple {
      position: absolute;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.3);
      transform: scale(0);
      animation: ripple-animation 0.6s linear;
      pointer-events: none;
    }
    
    @keyframes ripple-animation {
      to {
        transform: scale(4);
        opacity: 0;
      }
    }
    
    .btn-primary, .btn-secondary {
      position: relative;
      overflow: hidden;
    }
  </style>
</body>
</html>
